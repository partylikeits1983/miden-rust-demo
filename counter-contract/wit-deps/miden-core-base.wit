package miden:core-base@1.0.0;

// The function signatures should be kept in sync with the signatures in the
// Rust SDK `extern` functions (see `/sdk`);

interface account {

    /// Add the specified asset to the vault. Panics under various conditions.
    /// Returns the final asset in the account vault defined as follows: If asset is
    /// a non-fungible asset, then returns the same as asset. If asset is a
    /// fungible asset, then returns the total fungible asset in the account
    /// vault after asset was added to it.
    add-asset: func(asset0: f32, asset1: f32, asset2: f32, asset3: f32, result-ptr: s32);
    /// Remove the specified asset from the vault
    remove-asset: func(asset0: f32, asset1: f32, asset2: f32, asset3: f32, result-ptr: s32);
    /// Get the id of the currently executing account
    get-id: func(result-ptr: s32);

    /// Gets an item from the account storage
    get-item: func(index: f32, result-ptr: s32);
    /// Sets an item in the account storage
    set-item: func(index: f32, value0: f32, value1: f32, value2: f32, value3: f32, result-ptr: s32);
    /// Gets a map item from the account storage
    get-map-item: func(index: f32, key0: f32, key1: f32, key2: f32, key3: f32, result-ptr: s32);
    /// Sets a map item in the account storage
    set-map-item: func(index: f32, key0: f32, key1: f32, key2: f32, key3: f32, value0: f32, value1: f32, value2: f32, value3: f32, result-ptr: s32);

    /// Increments the account nonce by the provided value.
    incr-nonce: func(value: u32);
}


interface note {

    /// Get the inputs of the currently executed note
    get-inputs: func(ptr: s32) -> s32;
    /// Get the assets of the currently executing note
    get-assets: func(ptr: s32) -> s32;
}

interface tx {

    /// Creates a new note.
    /// asset is the asset to be included in the note.
    /// tag is the tag to be included in the note.
    /// recipient is the recipient of the note.
    /// Returns the id of the created note.
    create-note: func(
	tag: f32,
	aux: f32,
        note-type: f32,
	execution-hint: f32,
        recipient0: f32,
        recipient1: f32,
        recipient2: f32,
        recipient3: f32,
    ) -> f32;


    /// Adds the ASSET to the note specified by the index.
    ///
    /// Inputs:  [ASSET, note_idx]
    /// Outputs: [ASSET, note_idx]
    ///
    /// Where:
    /// - note_idx is the index of the note to which the asset is added.
    /// - ASSET can be a fungible or non-fungible asset.
    add-asset-to-note: func(
    	asset0: f32,
        asset1: f32,
        asset2: f32,
        asset3: f32,
	note-idx: f32,
	result-ptr: s32,
    );

}

world base {
    import account;
    import note;
    import tx;
}
